#!/bin/sh /etc/rc.common

START=99
STOP=10

RAM_MODE=true

# HIDDIFY_URL="https://github.com/PacketCipher/hiddify-core/releases/download/draft/hiddify-cli-linux-mipsel-softfloat.tar.gz"
HIDDIFY_URL="https://github.com/hiddify/hiddify-core/releases/download/v3.2.0/hiddify-cli-linux-mipsel-softfloat.tar.gz"

# SUB_URL="https://raw.githubusercontent.com/PacketCipher/TVC/main/subscriptions/hiddify/warp"
# SUB_URL="https://raw.githubusercontent.com/PacketCipher/TVC/main/subscriptions/xray/normal/mix"
# SUB_URL="https://raw.githubusercontent.com/hiddify/hiddify-app/refs/heads/main/test.configs/warp"
SUB_URL="https://github.com/PacketCipher/TVC/raw/refs/heads/main/subscriptions/hiddify/warp-2"

# Modify OpenVPN to be enabled or not
Enable_OVPN=false

# CRON_JOB="0 0 * * * /etc/init.d/hiddify restart"
CRON_JOB="0 */4 * * * /etc/init.d/hiddify restart"
# CRON_JOB="0 */12 * * * /etc/init.d/hiddify restart"
# CRON_JOB="0 * * * * /etc/init.d/hiddify restart"

if [ "$RAM_MODE" = true ]; then
    SERVICE_DIR="/tmp/usr/bin/HiddifyCli"
else
    SERVICE_DIR="/root/HiddifyCli"
fi

download_and_extract() {
    echo "Downloading and extracting Hiddify CLI..."

    # Create directory if it doesn't exist
    [ ! -d "$SERVICE_DIR" ] && mkdir -p "$SERVICE_DIR"

    # Download and extract the Hiddify CLI with retry logic
    local retries=10
    local count=0
    until [ $count -ge $retries ]
    do
        wget -O - "$HIDDIFY_URL" | tar -xz -C "$SERVICE_DIR" && break
        count=$((count+1))
        echo "Retrying... ($count/$retries)"
        sleep 60
    done

    if [ $count -ge $retries ]; then
        echo "Failed to download and extract Hiddify CLI after $retries attempts."
        return 1
    fi
}

add_cron_job() {
    crontab -r
    echo "Adding cron job..."
    (crontab -l 2>/dev/null | grep -F "$CRON_JOB") || (crontab -l 2>/dev/null; echo "$CRON_JOB") | crontab -
}

remove_cron_job() {
    echo "Removing cron job..."
    crontab -l 2>/dev/null | grep -v -F "$CRON_JOB" | crontab -
}

start() {
    echo "Starting Hiddify service..."
    
    # Check if the HiddifyCli exists, if not, download and extract
    if [ ! -f "$SERVICE_DIR/HiddifyCli" ]; then
        download_and_extract || return 1
    fi

    # Run the watchdog script with nohup
    if [ "$Enable_OVPN" = true ]; then
        SUB_URL=$SUB_URL SERVICE_DIR=$SERVICE_DIR nohup /root/hiddify_openvpn_watchdog.sh > /dev/null 2>&1 &
    else
        SUB_URL=$SUB_URL SERVICE_DIR=$SERVICE_DIR nohup /root/hiddify_watchdog.sh > /dev/null 2>&1 &
    fi
    
    nohup /root/set_warp_proxy.sh > /dev/null 2>&1 &  
    nohup /root/check_script.sh > /dev/null 2>&1 &

    add_cron_job
}

stop() {
    echo "Stopping Hiddify service..."
    if [ "$Enable_OVPN" = true ]; then
        killall hiddify_openvpn_watchdog.sh
        killall HiddifyCli
        killall openvpn
    else
        killall hiddify_watchdog.sh
        killall HiddifyCli
    fi
   
    killall set_warp_proxy.sh
    killall check_script.sh

    remove_cron_job
}

restart() {
    stop
    sleep 1
    start
}

start_service() {
    start
}

stop_service() {
    stop
}

disable() {
    stop
}
